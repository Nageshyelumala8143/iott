{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/iott/live/iott_webapp/src/components/LandingPages/homePageDetails/detailsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport './style.css';\nimport { Button, Grid } from '@material-ui/core';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slide from '@material-ui/core/Slide';\nimport endpoints from '../../../hoc/config/endpoints';\nimport Slider from \"react-slick\";\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport { useParams } from 'react-router-dom';\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff';\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Transition;\n\nfunction SampleNextArrow(props) {\n  const {\n    className,\n    style,\n    onClick\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n      className: className\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = SampleNextArrow;\n\nfunction SamplePrevArrow(props) {\n  const {\n    className,\n    style,\n    onClick\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n      className: className\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_c4 = SamplePrevArrow;\nexport default function Details() {\n  _s();\n\n  const [dataList, setDataList] = useState([]);\n  const [categoryList, setCategoryList] = useState([]);\n  const [quality360flag, setQuality360flag] = useState(false);\n  const [quality480flag, setQuality480flag] = useState(false);\n  const [quality720flag, setQuality720flag] = useState(false);\n  const [quality1080flag, setQuality1080flag] = useState(false);\n  const [quality, setQuality] = useState('');\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const vidRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playing, setPlaying] = useState(false);\n  const [videoTime, setVideoTime] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [playbackRate, setPlaybackRate] = useState(1);\n  const [volume, setVolume] = useState(1);\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [collectionAdded, setAddToColl] = useState(false);\n  const [isTrailer, setIsTrailer] = useState(false);\n  const [isMovie, setIsMovie] = useState(false);\n  const [categoryA, setCategory] = useState(''); // const [userPro, setUserPro] = useState('');\n\n  let user = JSON.parse(localStorage.getItem(\"user\"));\n  const [loginTo, setLoginTo] = useState(false);\n  useEffect(() => {\n    if (user !== null) {\n      window.setInterval(function () {\n        user = JSON.parse(localStorage.getItem(\"user\"));\n        setLoginTo(true);\n      }, 1000);\n    }\n  }, [user]);\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 5,\n    slidesToScroll: 1,\n    autoplay: false,\n    autoplaySpeed: 5000,\n    arrows: true,\n    nextArrow: /*#__PURE__*/_jsxDEV(SampleNextArrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 20\n    }, this),\n    prevArrow: /*#__PURE__*/_jsxDEV(SamplePrevArrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 20\n    }, this),\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        infinite: true,\n        dots: true\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2,\n        initialSlide: 2\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  };\n\n  function handleAllData(id) {\n    let videoById = atob(id);\n    axios.get(`${endpoints.getVideoByid}?id=${videoById}`).then(response => {\n      if (response.status === 200) {\n        var _response$data$, _response$data$2;\n\n        setDataList(response.data);\n        setCategory(response === null || response === void 0 ? void 0 : (_response$data$ = response.data[0]) === null || _response$data$ === void 0 ? void 0 : _response$data$.Genre);\n        hanldeGetCategoryList(response === null || response === void 0 ? void 0 : (_response$data$2 = response.data[0]) === null || _response$data$2 === void 0 ? void 0 : _response$data$2.Genre);\n      }\n    });\n  }\n\n  function hanldeGetCategoryList(Genre) {\n    axios.get(`${endpoints.getByGenere}?name=${Genre}`).then(response => {\n      if (response.status === 200) {\n        setCategoryList(response.data);\n      }\n    });\n  }\n\n  function handleViewAll(categoryA) {\n    let detailsName = btoa(categoryA);\n    navigate(`/viewall-details/${detailsName}`);\n  }\n\n  useEffect(() => {\n    handleAllData(id);\n    getCollevtionId(id);\n  }, []);\n\n  function handleQuality() {\n    setQuality480flag(true);\n    setQuality720flag(false);\n    setQuality360flag(false);\n    setQuality1080flag(false);\n  }\n\n  function handle480Quality() {\n    setQuality720flag(true);\n    setQuality360flag(false);\n    setQuality480flag(false);\n    setQuality1080flag(false);\n  }\n\n  function handle720Quality() {\n    setQuality1080flag(true);\n    setQuality360flag(false);\n    setQuality480flag(false);\n    setQuality720flag(false);\n  }\n\n  function handle1080Quality() {\n    setQuality360flag(true);\n    setQuality480flag(false);\n    setQuality720flag(false);\n    setQuality1080flag(false);\n  }\n\n  function playVideo() {\n    vidRef.current.play();\n    setIsPlaying(!isPlaying);\n  }\n\n  function pauseVideo() {\n    vidRef.current.pause();\n    setIsPlaying(!isPlaying);\n  }\n\n  function farwardVideo() {\n    vidRef.current.currentTime = vidRef.current.currentTime + 10;\n  }\n\n  function backwardVideo() {\n    vidRef.current.currentTime = vidRef.current.currentTime - 10;\n  }\n\n  function handleStartOver() {\n    vidRef.current.currentTime = 0;\n  }\n\n  const videoHandler = control => {\n    if (control === \"play\") {\n      vidRef.current.play();\n      setPlaying(true);\n      var vid = document.getElementById(\"video1\");\n      setVideoTime(vid.duration);\n    } else if (control === \"pause\") {\n      vidRef.current.pause();\n      setPlaying(false);\n    }\n  };\n\n  const fastForward = () => {\n    vidRef.current.currentTime += 5;\n  };\n\n  const revert = () => {\n    vidRef.current.currentTime -= 5;\n  };\n\n  window.setInterval(function () {\n    if (vidRef.current) {\n      var _vidRef$current, _vidRef$current2;\n\n      setCurrentTime(vidRef === null || vidRef === void 0 ? void 0 : (_vidRef$current = vidRef.current) === null || _vidRef$current === void 0 ? void 0 : _vidRef$current.currentTime);\n      setProgress((vidRef === null || vidRef === void 0 ? void 0 : (_vidRef$current2 = vidRef.current) === null || _vidRef$current2 === void 0 ? void 0 : _vidRef$current2.currentTime) / videoTime * 100);\n    }\n  }, 1000);\n\n  function handleProgressVideo(progress) {}\n\n  function scrub(e) {\n    var vid = document.getElementById(\"video1\");\n    const scrubTime = e.nativeEvent.offsetX / vid.clientWidth * vid.duration;\n\n    if (!isNaN(scrubTime)) {\n      vidRef.current.currentTime = scrubTime;\n    }\n  }\n\n  function startMouseDown(e) {\n    setIsMouseDown(true);\n  }\n\n  function endMouseDown(e) {\n    setIsMouseDown(false);\n  }\n\n  function handleRangeUpdate(e) {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"volume\") {\n      setVolume(value);\n      vidRef.current.volume = value;\n    } else {\n      setPlaybackRate(value);\n      vidRef.current.playbackRate = value;\n    } // this.setState({\n    //   [name]: value,\n    // });\n    // Todo: Check how to update state with Immutable JS\n    // instead of using refs\n    // var vid = document.getElementById(\"video1\");\n\n  }\n\n  function skip(e) {\n    const skipValue = e.target.attributes[0].value;\n\n    if (!isNaN(skipValue)) {\n      vidRef.video.currentTime += Number(skipValue);\n    }\n  }\n\n  function handleVolumeDown() {\n    setVolume(0);\n    vidRef.current.volume = 0;\n  }\n\n  function handleVolumeUp() {\n    setVolume(1);\n    vidRef.current.volume = 1;\n  }\n\n  function handleAddCollection(id) {\n    var _user;\n\n    const data = {\n      UserId: (_user = user) === null || _user === void 0 ? void 0 : _user.Id,\n      MovieId: id\n    };\n    axios.post(`${endpoints.addFavorite}`, data).then(response => {\n      if (response.status === 200) {\n        setAddToColl(true);\n      }\n    });\n  }\n\n  function getCollevtionId(id) {\n    var _user2;\n\n    let movieId = atob(id);\n    let userId = (_user2 = user) === null || _user2 === void 0 ? void 0 : _user2.Id;\n    axios.get(`${endpoints.getFavoriteById}?userid=${userId}&movieid=${movieId}`).then(response => {\n      if (response.status === 200) {\n        if ((response === null || response === void 0 ? void 0 : response.data) === 1) {\n          setAddToColl(true);\n        }\n      }\n    });\n  }\n\n  function handleWatchTrailer(id) {\n    setIsTrailer(true);\n    setIsMovie(false);\n    axios.get(`${endpoints.getTrailerById}?id=${id}`).then(response => {\n      if (response.status === 200) {}\n    });\n  }\n\n  function handleWatchMovie() {\n    if (user !== null) {\n      setLoginTo(true);\n      setIsMovie(true);\n      setIsTrailer(false);\n      vidRef.current.play();\n      setPlaying(true);\n      var vid = document.getElementById(\"video1\");\n      setVideoTime(vid.duration);\n      localStorage.setItem(\"IsMovie\", true);\n    }\n  } // useEffect(()=>{\n  //     if(user){\n  //         setUserPro(JSON.parse(localStorage.getItem(\"user\")));\n  //     }\n  // },[user])\n\n\n  useEffect(() => {\n    localStorage.removeItem(\"IsMovie\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [dataList.map((item, index) => {\n      var _item$cast;\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          className: \"player\",\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            className: \"main\",\n            item: true,\n            md: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              className: \"image-grid\",\n              item: true,\n              md: 12,\n              xs: 12,\n              children: quality1080flag ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"video-container1\",\n                children: [loginTo ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"controls\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: revert,\n                    className: \"controlsIcon\",\n                    alt: \"\",\n                    src: \"/images/player/backward.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 49\n                  }, this), playing ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: () => videoHandler(\"pause\"),\n                    className: \"controlsIconsmall\",\n                    alt: \"\",\n                    src: \"/images/player/pause.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 53\n                  }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: () => videoHandler(\"play\"),\n                    className: \"controlsIconsmall\",\n                    alt: \"\",\n                    src: \"/images/player/play.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: fastForward,\n                    className: \"controlsIcon\",\n                    alt: \"\",\n                    src: \"/images/player/forward.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 45\n                }, this) : \"\", /*#__PURE__*/_jsxDEV(\"video\", {\n                  ref: vidRef,\n                  className: \"vedio-palyer video\",\n                  poster: item === null || item === void 0 ? void 0 : item.MoviePoster,\n                  width: \"100%\",\n                  id: \"video1\",\n                  children: /*#__PURE__*/_jsxDEV(\"source\", {\n                    src: item === null || item === void 0 ? void 0 : item.Quality1080,\n                    type: \"video/mp4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 41\n                }, this), !loginTo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"loginWatch\",\n                    children: \"Login to Watch the Movie\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false) : \"\", /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => handle1080Quality(),\n                  className: \"quality\",\n                  children: 'HD'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"timecontrols\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"controlsTime\",\n                    children: Math.floor(currentTime / (60 * 60)) + \":\" + (\"0\" + Math.floor(currentTime / 60 % 60)).slice(-2) + \":\" + (\"0\" + Math.floor(currentTime % 60)).slice(-2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"time_progressbarContainer\",\n                    onClick: () => handleProgressVideo(progress),\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        width: `${progress}%`\n                      },\n                      className: \"time_progressBar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"controlsTime\",\n                    children: Math.floor(videoTime / (60 * 60)) + \":\" + (\"0\" + Math.floor(videoTime / 60)).slice(-2) + \":\" + (\"0\" + Math.floor(videoTime % 60)).slice(-2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 41\n                }, this), volume > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"volume-progress\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"player_slider\",\n                    type: \"range\",\n                    name: \"volume\",\n                    className: \"player__slider\",\n                    min: \"0\",\n                    max: \"1\",\n                    step: \"0.05\",\n                    value: volume,\n                    onChange: e => handleRangeUpdate(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(VolumeUpIcon, {\n                    onClick: handleVolumeDown,\n                    className: \"volumeIcons\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"volume-progress\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"player_slider\",\n                    type: \"range\",\n                    name: \"volume\",\n                    className: \"player__slider\",\n                    min: \"0\",\n                    max: \"1\",\n                    step: \"0.05\",\n                    value: volume,\n                    onChange: e => handleRangeUpdate(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(VolumeOffIcon, {\n                    onClick: handleVolumeUp,\n                    className: \"volumeIcons\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 37\n              }, this) : quality720flag ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"video-container1\",\n                children: [loginTo ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"controls\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: revert,\n                    className: \"controlsIcon\",\n                    alt: \"\",\n                    src: \"/images/player/backward.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 53\n                  }, this), playing ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: () => videoHandler(\"pause\"),\n                    className: \"controlsIconsmall\",\n                    alt: \"\",\n                    src: \"/images/player/pause.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 57\n                  }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: () => videoHandler(\"play\"),\n                    className: \"controlsIconsmall\",\n                    alt: \"\",\n                    src: \"/images/player/play.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: fastForward,\n                    className: \"controlsIcon\",\n                    alt: \"\",\n                    src: \"/images/player/forward.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 49\n                }, this) : \"\", /*#__PURE__*/_jsxDEV(\"video\", {\n                  ref: vidRef,\n                  className: \"vedio-palyer video\",\n                  poster: item === null || item === void 0 ? void 0 : item.MoviePoster,\n                  width: \"100%\",\n                  id: \"video1\",\n                  children: /*#__PURE__*/_jsxDEV(\"source\", {\n                    src: item === null || item === void 0 ? void 0 : item.Quality720,\n                    type: \"video/mp4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 45\n                }, this), !loginTo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"loginWatch\",\n                    children: \"Login to Watch the Movie\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false) : \"\", /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => handle720Quality(),\n                  className: \"quality\",\n                  children: 'SD'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"timecontrols\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"controlsTime\",\n                    children: Math.floor(currentTime / (60 * 60)) + \":\" + (\"0\" + Math.floor(currentTime / 60 % 60)).slice(-2) + \":\" + (\"0\" + Math.floor(currentTime % 60)).slice(-2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"time_progressbarContainer\",\n                    onClick: () => handleProgressVideo(progress),\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        width: `${progress}%`\n                      },\n                      className: \"time_progressBar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 552,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"controlsTime\",\n                    children: Math.floor(videoTime / (60 * 60)) + \":\" + (\"0\" + Math.floor(videoTime / 60)).slice(-2) + \":\" + (\"0\" + Math.floor(videoTime % 60)).slice(-2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 45\n                }, this), volume > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"volume-progress\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"player_slider\",\n                    type: \"range\",\n                    name: \"volume\",\n                    className: \"player__slider\",\n                    min: \"0\",\n                    max: \"1\",\n                    step: \"0.05\",\n                    value: volume,\n                    onChange: e => handleRangeUpdate(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(VolumeUpIcon, {\n                    onClick: handleVolumeDown,\n                    className: \"volumeIcons\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"volume-progress\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"player_slider\",\n                    type: \"range\",\n                    name: \"volume\",\n                    className: \"player__slider\",\n                    min: \"0\",\n                    max: \"1\",\n                    step: \"0.05\",\n                    value: volume,\n                    onChange: e => handleRangeUpdate(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 600,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(VolumeOffIcon, {\n                    onClick: handleVolumeUp,\n                    className: \"volumeIcons\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 41\n              }, this) : quality480flag ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"video-container1\",\n                children: [loginTo ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"controls\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: revert,\n                    className: \"controlsIcon\",\n                    alt: \"\",\n                    src: \"/images/player/backward.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 61\n                  }, this), playing ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: () => videoHandler(\"pause\"),\n                    className: \"controlsIconsmall\",\n                    alt: \"\",\n                    src: \"/images/player/pause.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 622,\n                    columnNumber: 65\n                  }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: () => videoHandler(\"play\"),\n                    className: \"controlsIconsmall\",\n                    alt: \"\",\n                    src: \"/images/player/play.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 65\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: fastForward,\n                    className: \"controlsIcon\",\n                    alt: \"\",\n                    src: \"/images/player/forward.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 636,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 57\n                }, this) : \"\", /*#__PURE__*/_jsxDEV(\"video\", {\n                  ref: vidRef,\n                  poster: item === null || item === void 0 ? void 0 : item.MoviePoster,\n                  width: \"100%\",\n                  className: \"vedio-palyer video\",\n                  id: \"video1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n                  src: item === null || item === void 0 ? void 0 : item.Quality480,\n                  type: \"video/mp4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 53\n                }, this), !loginTo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"loginWatch\",\n                    children: \"Login to Watch the Movie\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 61\n                  }, this)\n                }, void 0, false) : \"\", /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => handle480Quality(),\n                  className: \"quality\",\n                  children: 'SUB'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"timecontrols\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"controlsTime\",\n                    children: Math.floor(currentTime / (60 * 60)) + \":\" + (\"0\" + Math.floor(currentTime / 60 % 60)).slice(-2) + \":\" + (\"0\" + Math.floor(currentTime % 60)).slice(-2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 672,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"time_progressbarContainer\",\n                    onClick: () => handleProgressVideo(progress),\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        width: `${progress}%`\n                      },\n                      className: \"time_progressBar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 678,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 675,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"controlsTime\",\n                    children: Math.floor(videoTime / (60 * 60)) + \":\" + (\"0\" + Math.floor(videoTime / 60)).slice(-2) + \":\" + (\"0\" + Math.floor(videoTime % 60)).slice(-2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 684,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 53\n                }, this), volume > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"volume-progress\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"player_slider\",\n                    type: \"range\",\n                    name: \"volume\",\n                    className: \"player__slider\",\n                    min: \"0\",\n                    max: \"1\",\n                    step: \"0.05\",\n                    value: volume,\n                    onChange: e => handleRangeUpdate(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 691,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(VolumeUpIcon, {\n                    onClick: handleVolumeDown,\n                    className: \"volumeIcons\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 701,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 57\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"volume-progress\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"player_slider\",\n                    type: \"range\",\n                    name: \"volume\",\n                    className: \"player__slider\",\n                    min: \"0\",\n                    max: \"1\",\n                    step: \"0.05\",\n                    value: volume,\n                    onChange: e => handleRangeUpdate(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 717,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 726,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(VolumeOffIcon, {\n                    onClick: handleVolumeUp,\n                    className: \"volumeIcons\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 727,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"video-container1\",\n                children: [loginTo ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"controls\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: revert,\n                    className: \"controlsIcon\",\n                    alt: \"\",\n                    src: \"/images/player/backward.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 741,\n                    columnNumber: 61\n                  }, this), playing ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: () => videoHandler(\"pause\"),\n                    className: \"controlsIconsmall\",\n                    alt: \"\",\n                    src: \"/images/player/pause.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 748,\n                    columnNumber: 65\n                  }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: () => videoHandler(\"play\"),\n                    className: \"controlsIconsmall\",\n                    alt: \"\",\n                    src: \"/images/player/play.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 755,\n                    columnNumber: 65\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    onClick: fastForward,\n                    className: \"controlsIcon\",\n                    alt: \"\",\n                    src: \"/images/player/forward.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 762,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 740,\n                  columnNumber: 57\n                }, this) : \"\", /*#__PURE__*/_jsxDEV(\"video\", {\n                  ref: vidRef,\n                  poster: item === null || item === void 0 ? void 0 : item.MoviePoster,\n                  width: \"100%\",\n                  className: \"vedio-palyer video\",\n                  id: \"video1\",\n                  children: /*#__PURE__*/_jsxDEV(\"source\", {\n                    src: item === null || item === void 0 ? void 0 : item.Quality360,\n                    type: \"video/mp4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 777,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 770,\n                  columnNumber: 53\n                }, this), !loginTo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"loginWatch\",\n                    children: \"Login to Watch the Movie\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 784,\n                    columnNumber: 61\n                  }, this)\n                }, void 0, false) : \"\", (item === null || item === void 0 ? void 0 : item.IsPremium) == false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"freeTag-details\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"/images/free-tag.png\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 791,\n                      columnNumber: 91\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 791,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false) : \"\", loginTo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => handleQuality(),\n                    className: \"quality\",\n                    children: 'LOW'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 796,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"timecontrols\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"controlsTime\",\n                      children: Math.floor(currentTime / (60 * 60)) + \":\" + (\"0\" + Math.floor(currentTime / 60 % 60)).slice(-2) + \":\" + (\"0\" + Math.floor(currentTime % 60)).slice(-2)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 803,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"time_progressbarContainer\" // onClick={() => handleProgressVideo(progress)}\n                      ,\n                      onMouseDown: startMouseDown,\n                      onMouseUp: endMouseDown,\n                      onMouseLeave: endMouseDown,\n                      onMouseMove: e => isMouseDown && scrub(e),\n                      onClick: scrub,\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          width: `${progress}%`\n                        },\n                        className: \"time_progressBar\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 814,\n                        columnNumber: 69\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 806,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"controlsTime\",\n                      children: Math.floor(videoTime / (60 * 60)) + \":\" + (\"0\" + Math.floor(videoTime / 60)).slice(-2) + \":\" + (\"0\" + Math.floor(videoTime % 60)).slice(-2)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 820,\n                      columnNumber: 65\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 802,\n                    columnNumber: 61\n                  }, this), volume > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"volume-progress\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"player_slider\",\n                      type: \"range\",\n                      name: \"volume\",\n                      className: \"player__slider\",\n                      min: \"0\",\n                      max: \"1\",\n                      step: \"0.05\",\n                      value: volume,\n                      onChange: e => handleRangeUpdate(e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 827,\n                      columnNumber: 69\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 836,\n                      columnNumber: 69\n                    }, this), /*#__PURE__*/_jsxDEV(VolumeUpIcon, {\n                      onClick: handleVolumeDown,\n                      className: \"volumeIcons\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 837,\n                      columnNumber: 69\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 825,\n                    columnNumber: 65\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"volume-progress\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"player_slider\",\n                      type: \"range\",\n                      name: \"volume\",\n                      className: \"player__slider\",\n                      min: \"0\",\n                      max: \"1\",\n                      step: \"0.05\",\n                      value: volume,\n                      onChange: e => handleRangeUpdate(e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 853,\n                      columnNumber: 69\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 862,\n                      columnNumber: 69\n                    }, this), /*#__PURE__*/_jsxDEV(VolumeOffIcon, {\n                      onClick: handleVolumeUp,\n                      className: \"volumeIcons\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 863,\n                      columnNumber: 69\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 851,\n                    columnNumber: 65\n                  }, this)]\n                }, void 0, true) : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"description\",\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            className: \"tile-main\",\n            item: true,\n            md: 12,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              className: \"icon\",\n              item: true,\n              md: 3,\n              xs: 3,\n              onClick: () => handleStartOver(),\n              style: {\n                cursor: 'pointer'\n              },\n              children: [/*#__PURE__*/_jsxDEV(ReplayIcon, {\n                className: \"icon-replay\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"start-over\",\n                children: \"Start Over\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              className: \"name icon\",\n              item: true,\n              md: 6,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item === null || item === void 0 ? void 0 : item.MovieName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 889,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item === null || item === void 0 ? void 0 : item.Language\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [item === null || item === void 0 ? void 0 : item.Genre, \" | \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 891,\n                  columnNumber: 36\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [item === null || item === void 0 ? void 0 : item.IMDbRating, \" | \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 891,\n                  columnNumber: 65\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [item === null || item === void 0 ? void 0 : item.Certificate, \" | \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 891,\n                  columnNumber: 100\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [(item === null || item === void 0 ? void 0 : item.Duration.split(':')[0].substr(1, 1)) + 'h ' + (item === null || item === void 0 ? void 0 : item.Duration.split(':')[1]) + 'min', \" | \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 891,\n                  columnNumber: 135\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item === null || item === void 0 ? void 0 : item.ReleasedYear.split(' ')[0].split('/')[2]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 891,\n                  columnNumber: 234\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"button-bg\",\n                onClick: () => handleWatchTrailer(item === null || item === void 0 ? void 0 : item.Id),\n                children: \"Watch Trailer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 892,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"button-bg\",\n                onClick: () => handleWatchMovie(),\n                children: \"Watch Movie\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              className: \"last-grid\",\n              item: true,\n              md: 3,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/images/My collection.png\",\n                className: \"collection\",\n                onClick: () => handleAddCollection(item === null || item === void 0 ? void 0 : item.Id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"addtocollection\",\n                children: collectionAdded ? \"Remove from Collection\" : \"Add to collection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 895,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"description padd\",\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            className: \"description-main\",\n            item: true,\n            md: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              className: \"description-text\",\n              item: true,\n              md: 12,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 904,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"description-para\",\n                children: item === null || item === void 0 ? void 0 : item.Description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 905,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: \"crew padd\",\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            className: \"crew-main\",\n            item: true,\n            md: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              className: \"crew-text\",\n              item: true,\n              md: 12,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Cast & Crew\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 914,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            className: \"crew-images\",\n            item: true,\n            md: 12,\n            xs: 12,\n            children: item === null || item === void 0 ? void 0 : (_item$cast = item.cast) === null || _item$cast === void 0 ? void 0 : _item$cast.map((cas, index) => /*#__PURE__*/_jsxDEV(Grid, {\n              className: \"crew-images1\",\n              item: true,\n              md: 1,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: cas === null || cas === void 0 ? void 0 : cas.ImageURL,\n                alt: \"castAndCrew\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 921,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"role\",\n                children: cas === null || cas === void 0 ? void 0 : cas.Role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"charactor\",\n                children: cas === null || cas === void 0 ? void 0 : cas.Charactor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 920,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }), /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"realted padd\",\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"related-main\",\n        item: true,\n        md: 12,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"iq-main-header d-flex align-items-center justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"main-title\",\n            children: \"Related Movies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"iq-view-all\",\n            onClick: () => handleViewAll(categoryA),\n            children: \"View All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n          children: categoryList.map((category, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"highlyRatedslider\" //  onClick={() => handleHighlyRated(language)}\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"highlyRatedMovies\",\n              src: category === null || category === void 0 ? void 0 : category.MoviePoster\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Details, \"FPa1DcottqIeBPJf3BUukE5DDUw=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c5 = Details;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"SampleNextArrow\");\n$RefreshReg$(_c4, \"SamplePrevArrow\");\n$RefreshReg$(_c5, \"Details\");","map":{"version":3,"sources":["/opt/lampp/htdocs/iott/live/iott_webapp/src/components/LandingPages/homePageDetails/detailsPage.js"],"names":["React","useEffect","useRef","useState","axios","Button","Grid","ReplayIcon","Slide","endpoints","Slider","ArrowBackIosNewIcon","ArrowForwardIosIcon","useParams","VolumeUpIcon","VolumeOffIcon","useNavigate","Transition","forwardRef","props","ref","SampleNextArrow","className","style","onClick","SamplePrevArrow","Details","dataList","setDataList","categoryList","setCategoryList","quality360flag","setQuality360flag","quality480flag","setQuality480flag","quality720flag","setQuality720flag","quality1080flag","setQuality1080flag","quality","setQuality","id","navigate","vidRef","isPlaying","setIsPlaying","playing","setPlaying","videoTime","setVideoTime","currentTime","setCurrentTime","progress","setProgress","playbackRate","setPlaybackRate","volume","setVolume","isMouseDown","setIsMouseDown","collectionAdded","setAddToColl","isTrailer","setIsTrailer","isMovie","setIsMovie","categoryA","setCategory","user","JSON","parse","localStorage","getItem","loginTo","setLoginTo","window","setInterval","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","arrows","nextArrow","prevArrow","responsive","breakpoint","initialSlide","handleAllData","videoById","atob","get","getVideoByid","then","response","status","data","Genre","hanldeGetCategoryList","getByGenere","handleViewAll","detailsName","btoa","getCollevtionId","handleQuality","handle480Quality","handle720Quality","handle1080Quality","playVideo","current","play","pauseVideo","pause","farwardVideo","backwardVideo","handleStartOver","videoHandler","control","vid","document","getElementById","duration","fastForward","revert","handleProgressVideo","scrub","e","scrubTime","nativeEvent","offsetX","clientWidth","isNaN","startMouseDown","endMouseDown","handleRangeUpdate","name","value","target","skip","skipValue","attributes","video","Number","handleVolumeDown","handleVolumeUp","handleAddCollection","UserId","Id","MovieId","post","addFavorite","movieId","userId","getFavoriteById","handleWatchTrailer","getTrailerById","handleWatchMovie","setItem","removeItem","map","item","index","MoviePoster","Quality1080","Math","floor","slice","width","Quality720","Quality480","Quality360","IsPremium","cursor","MovieName","Language","IMDbRating","Certificate","Duration","split","substr","ReleasedYear","Description","cast","cas","ImageURL","Role","Charactor","category"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport './style.css';\nimport { Button, Grid } from '@material-ui/core';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slide from '@material-ui/core/Slide';\nimport endpoints from '../../../hoc/config/endpoints';\nimport Slider from \"react-slick\";\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport { useParams } from 'react-router-dom';\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff';\nimport { useNavigate } from \"react-router\";\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction SampleNextArrow(props) {\n    const { className, style, onClick } = props;\n\n    return (\n        <div\n            onClick={onClick}\n        >\n            <ArrowForwardIosIcon className={className} />\n        </div>\n    );\n}\n\nfunction SamplePrevArrow(props) {\n    const { className, style, onClick } = props;\n    return (\n        <div\n            onClick={onClick}\n        >\n            <ArrowBackIosNewIcon className={className} />\n        </div>\n    );\n}\n\n\n\n\nexport default function Details() {\n    const [dataList, setDataList] = useState([]);\n    const [categoryList, setCategoryList] = useState([]);\n    const [quality360flag, setQuality360flag] = useState(false);\n    const [quality480flag, setQuality480flag] = useState(false);\n    const [quality720flag, setQuality720flag] = useState(false);\n    const [quality1080flag, setQuality1080flag] = useState(false);\n    const [quality, setQuality] = useState('');\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const vidRef = useRef(null);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [playing, setPlaying] = useState(false);\n    const [videoTime, setVideoTime] = useState(0);\n    const [currentTime, setCurrentTime] = useState(0);\n    const [progress, setProgress] = useState(0);\n    const [playbackRate, setPlaybackRate] = useState(1);\n    const [volume, setVolume] = useState(1);\n    const [isMouseDown, setIsMouseDown] = useState(false);\n    const [collectionAdded, setAddToColl] = useState(false);\n    const [isTrailer, setIsTrailer] = useState(false);\n    const [isMovie, setIsMovie] = useState(false);\n    const [categoryA, setCategory] = useState('');\n    // const [userPro, setUserPro] = useState('');\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    const [loginTo, setLoginTo] = useState(false);\n\n    useEffect(() => {\n        if (user !== null) {\n            window.setInterval(function () {\n                user = JSON.parse(localStorage.getItem(\"user\"));\n                setLoginTo(true);\n            }, 1000);\n        }\n\n    }, [user])\n\n    const settings = {\n        dots: false,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 5,\n        slidesToScroll: 1,\n        autoplay: false,\n        autoplaySpeed: 5000,\n        arrows: true,\n        nextArrow: <SampleNextArrow />,\n        prevArrow: <SamplePrevArrow />,\n        responsive: [\n            {\n                breakpoint: 1024,\n                settings: {\n                    slidesToShow: 3,\n                    slidesToScroll: 3,\n                    infinite: true,\n                    dots: true\n                }\n            },\n            {\n                breakpoint: 600,\n                settings: {\n                    slidesToShow: 2,\n                    slidesToScroll: 2,\n                    initialSlide: 2\n                }\n            },\n            {\n                breakpoint: 480,\n                settings: {\n                    slidesToShow: 1,\n                    slidesToScroll: 1\n                }\n            }\n        ]\n    };\n\n    function handleAllData(id) {\n        let videoById = atob(id);\n        axios.get(`${endpoints.getVideoByid}?id=${videoById}`).then((response) => {\n            if (response.status === 200) {\n                setDataList(response.data);\n                setCategory(response?.data[0]?.Genre);\n                hanldeGetCategoryList(response?.data[0]?.Genre);\n            }\n        })\n    }\n\n    function hanldeGetCategoryList(Genre) {\n        axios.get(`${endpoints.getByGenere}?name=${Genre}`).then((response) => {\n            if (response.status === 200) {\n                setCategoryList(response.data);\n            }\n        })\n    }\n\n    function handleViewAll(categoryA) {\n        let detailsName = btoa(categoryA);\n        navigate(`/viewall-details/${detailsName}`);\n    }\n\n    useEffect(() => {\n        handleAllData(id);\n        getCollevtionId(id);\n\n    }, [])\n\n    function handleQuality() {\n        setQuality480flag(true);\n        setQuality720flag(false);\n        setQuality360flag(false);\n        setQuality1080flag(false);\n    }\n    function handle480Quality() {\n        setQuality720flag(true);\n        setQuality360flag(false);\n        setQuality480flag(false);\n        setQuality1080flag(false);\n    }\n\n    function handle720Quality() {\n        setQuality1080flag(true);\n        setQuality360flag(false);\n        setQuality480flag(false);\n        setQuality720flag(false);\n\n    }\n    function handle1080Quality() {\n        setQuality360flag(true);\n        setQuality480flag(false);\n        setQuality720flag(false);\n        setQuality1080flag(false);\n    }\n\n    function playVideo() {\n        vidRef.current.play();\n        setIsPlaying(!isPlaying);\n    }\n\n    function pauseVideo() {\n        vidRef.current.pause();\n        setIsPlaying(!isPlaying);\n    }\n\n    function farwardVideo() {\n        vidRef.current.currentTime = vidRef.current.currentTime + 10;\n    }\n    function backwardVideo() {\n        vidRef.current.currentTime = vidRef.current.currentTime - 10;\n\n    }\n\n    function handleStartOver() {\n        vidRef.current.currentTime = 0;\n    }\n\n    const videoHandler = (control) => {\n        if (control === \"play\") {\n            vidRef.current.play();\n            setPlaying(true);\n            var vid = document.getElementById(\"video1\");\n            setVideoTime(vid.duration);\n        } else if (control === \"pause\") {\n            vidRef.current.pause();\n            setPlaying(false);\n        }\n    };\n\n    const fastForward = () => {\n        vidRef.current.currentTime += 5;\n    };\n\n    const revert = () => {\n        vidRef.current.currentTime -= 5;\n    };\n\n    window.setInterval(function () {\n        if (vidRef.current) {\n            setCurrentTime(vidRef?.current?.currentTime);\n            setProgress((vidRef?.current?.currentTime / videoTime) * 100);\n        }\n    }, 1000);\n\n    function handleProgressVideo(progress) {\n    }\n\n    function scrub(e) {\n        var vid = document.getElementById(\"video1\");\n        const scrubTime = (e.nativeEvent.offsetX / vid.clientWidth) * vid.duration;\n        if (!isNaN(scrubTime)) {\n            vidRef.current.currentTime = scrubTime;\n        }\n    }\n\n    function startMouseDown(e) {\n        setIsMouseDown(true);\n    }\n\n    function endMouseDown(e) {\n        setIsMouseDown(false);\n    }\n\n    function handleRangeUpdate(e) {\n        const { name, value } = e.target;\n        if (name === \"volume\") {\n            setVolume(value);\n            vidRef.current.volume = value;\n        } else {\n            setPlaybackRate(value);\n            vidRef.current.playbackRate = value;\n        }\n        // this.setState({\n        //   [name]: value,\n        // });\n        // Todo: Check how to update state with Immutable JS\n        // instead of using refs\n        // var vid = document.getElementById(\"video1\");\n\n\n    }\n\n    function skip(e) {\n        const skipValue = e.target.attributes[0].value;\n        if (!isNaN(skipValue)) {\n            vidRef.video.currentTime += Number(skipValue);\n        }\n    }\n\n    function handleVolumeDown() {\n        setVolume(0);\n        vidRef.current.volume = 0;\n    }\n\n    function handleVolumeUp() {\n        setVolume(1);\n        vidRef.current.volume = 1;\n    }\n\n    function handleAddCollection(id) {\n        const data = {\n            UserId: user?.Id,\n            MovieId: id\n        }\n        axios.post(`${endpoints.addFavorite}`, data).then((response) => {\n            if (response.status === 200) {\n                setAddToColl(true);\n            }\n        })\n    }\n\n    function getCollevtionId(id) {\n        let movieId = atob(id);\n        let userId = user?.Id;\n        axios.get(`${endpoints.getFavoriteById}?userid=${userId}&movieid=${movieId}`).then((response) => {\n            if (response.status === 200) {\n                if (response?.data === 1) {\n                    setAddToColl(true);\n                }\n\n            }\n        })\n\n    }\n\n\n\n    function handleWatchTrailer(id) {\n        setIsTrailer(true);\n        setIsMovie(false);\n        axios.get(`${endpoints.getTrailerById}?id=${id}`).then((response) => {\n            if (response.status === 200) {\n\n            }\n        })\n\n    }\n\n    function handleWatchMovie() {\n        if (user !== null) {\n            setLoginTo(true);\n            setIsMovie(true);\n            setIsTrailer(false);\n            vidRef.current.play();\n            setPlaying(true);\n            var vid = document.getElementById(\"video1\");\n            setVideoTime(vid.duration);\n            localStorage.setItem(\"IsMovie\", true);\n        }\n    }\n\n\n    // useEffect(()=>{\n    //     if(user){\n    //         setUserPro(JSON.parse(localStorage.getItem(\"user\")));\n    //     }\n\n    // },[user])\n\n    useEffect(() => {\n        localStorage.removeItem(\"IsMovie\");\n    }, [])\n\n    return (\n        <div>\n            {dataList.map((item, index) =>\n                <>\n                    <Grid className=\"player\" container spacing={3} key={index}>\n                        <Grid className=\"main\" item md={12} xs={12}>\n                            <Grid className=\"image-grid\" item md={12} xs={12}>\n                                {/* <img src={item?.MoviePoster} alt=\"videoByIdImage\" /> */}\n                                {quality1080flag ? (\n                                    <div className=\"video-container1\">\n                                        {loginTo ?\n                                            <div className=\"controls\">\n                                                <img\n                                                    onClick={revert}\n                                                    className=\"controlsIcon\"\n                                                    alt=\"\"\n                                                    src=\"/images/player/backward.png\"\n                                                />\n                                                {playing ? (\n                                                    <img\n                                                        onClick={() => videoHandler(\"pause\")}\n                                                        className=\"controlsIconsmall\"\n                                                        alt=\"\"\n                                                        src=\"/images/player/pause.png\"\n                                                    />\n                                                ) : (\n                                                    <img\n                                                        onClick={() => videoHandler(\"play\")}\n                                                        className=\"controlsIconsmall\"\n                                                        alt=\"\"\n                                                        src=\"/images/player/play.png\"\n                                                    />\n                                                )}\n                                                <img\n                                                    onClick={fastForward}\n                                                    className=\"controlsIcon\"\n                                                    alt=\"\"\n                                                    src=\"/images/player/forward.png\"\n                                                />\n                                            </div>\n                                            : \"\"}\n                                        <video\n                                            ref={vidRef}\n                                            className=\"vedio-palyer video\"\n                                            poster={item?.MoviePoster}\n                                            width=\"100%\"\n                                            id=\"video1\"\n                                        >\n                                            <source\n                                                src={item?.Quality1080}\n                                                type=\"video/mp4\"\n                                            ></source>\n                                        </video>\n                                        {!loginTo ?\n                                            <>\n                                                <span className='loginWatch'>\n                                                    Login to Watch the Movie\n                                                </span>\n                                            </>\n                                            : \"\"}\n                                        <Button\n                                            onClick={() => handle1080Quality()}\n                                            className=\"quality\"\n                                        >\n                                            {'HD'}\n                                        </Button>\n                                        {/* <div className=\"controlsContainer\">\n\n                                        </div> */}\n                                        <div className=\"timecontrols\">\n                                            <p className=\"controlsTime\">\n                                                {Math.floor(currentTime / (60 * 60)) + \":\" + (\"0\" + Math.floor((currentTime / 60) % 60)).slice(-2) + \":\" + (\"0\" + Math.floor(currentTime % 60)).slice(-2)}\n                                            </p>\n                                            <div className=\"time_progressbarContainer\"\n                                                onClick={() => handleProgressVideo(progress)}\n                                            >\n                                                <div\n                                                    style={{ width: `${progress}%` }}\n                                                    className=\"time_progressBar\"\n\n                                                ></div>\n                                            </div>\n                                            <p className=\"controlsTime\">\n                                                {Math.floor(videoTime / (60 * 60)) + \":\" + (\"0\" + Math.floor(videoTime / 60)).slice(-2) + \":\" + (\"0\" + Math.floor(videoTime % 60)).slice(-2)}\n                                            </p>\n                                        </div>\n                                        {volume > 0 ? (\n                                            <div className=\"volume-progress\">\n\n                                                <input\n                                                    id=\"player_slider\"\n                                                    type=\"range\"\n                                                    name=\"volume\"\n                                                    className=\"player__slider\"\n                                                    min=\"0\" max=\"1\" step=\"0.05\"\n                                                    value={volume}\n                                                    onChange={(e) => handleRangeUpdate(e)}\n                                                />\n                                                <br />\n                                                <VolumeUpIcon\n                                                    onClick={handleVolumeDown}\n                                                    className=\"volumeIcons\"\n                                                />\n                                                {/* <input\n                                                        type=\"range\"\n                                                        name=\"playbackRate\"\n                                                        className=\"player__slider\"\n                                                        min=\"0.5\" max=\"2\" step=\"0.1\"\n                                                        value={playbackRate}\n                                                        onChange={(e) => handleRangeUpdate(e)}\n                                                    /> */}\n                                            </div>\n                                        ) : (\n                                            <div className=\"volume-progress\">\n\n                                                <input\n                                                    id=\"player_slider\"\n                                                    type=\"range\"\n                                                    name=\"volume\"\n                                                    className=\"player__slider\"\n                                                    min=\"0\" max=\"1\" step=\"0.05\"\n                                                    value={volume}\n                                                    onChange={(e) => handleRangeUpdate(e)}\n                                                />\n                                                <br />\n                                                <VolumeOffIcon\n                                                    onClick={handleVolumeUp}\n                                                    className=\"volumeIcons\"\n                                                />\n\n                                            </div>\n                                        )}\n                                    </div>\n                                ) : (\n                                    quality720flag ? (\n                                        <div className=\"video-container1\">\n                                            {loginTo ?\n                                                <div className=\"controls\">\n                                                    <img\n                                                        onClick={revert}\n                                                        className=\"controlsIcon\"\n                                                        alt=\"\"\n                                                        src=\"/images/player/backward.png\"\n                                                    />\n                                                    {playing ? (\n                                                        <img\n                                                            onClick={() => videoHandler(\"pause\")}\n                                                            className=\"controlsIconsmall\"\n                                                            alt=\"\"\n                                                            src=\"/images/player/pause.png\"\n                                                        />\n                                                    ) : (\n                                                        <img\n                                                            onClick={() => videoHandler(\"play\")}\n                                                            className=\"controlsIconsmall\"\n                                                            alt=\"\"\n                                                            src=\"/images/player/play.png\"\n                                                        />\n                                                    )}\n                                                    <img\n                                                        onClick={fastForward}\n                                                        className=\"controlsIcon\"\n                                                        alt=\"\"\n                                                        src=\"/images/player/forward.png\"\n                                                    />\n                                                </div>\n                                                : \"\"}\n                                            <video\n                                                ref={vidRef}\n                                                className=\"vedio-palyer video\"\n                                                poster={item?.MoviePoster}\n                                                width=\"100%\"\n                                                id=\"video1\"\n                                            >\n                                                <source\n                                                    src={item?.Quality720}\n                                                    type=\"video/mp4\"\n                                                ></source>\n                                            </video>\n                                            {!loginTo ?\n                                                <>\n                                                    <span className='loginWatch'>\n                                                        Login to Watch the Movie\n                                                    </span>\n                                                </>\n                                                : \"\"}\n                                            <Button\n                                                onClick={() => handle720Quality()}\n                                                className=\"quality\"\n                                            >\n                                                {'SD'}\n                                            </Button>\n                                            {/* <div className=\"controlsContainer\">\n                                                \n                                            </div> */}\n                                            <div className=\"timecontrols\">\n                                                <p className=\"controlsTime\">\n                                                    {Math.floor(currentTime / (60 * 60)) + \":\" + (\"0\" + Math.floor((currentTime / 60) % 60)).slice(-2) + \":\" + (\"0\" + Math.floor(currentTime % 60)).slice(-2)}\n                                                </p>\n                                                <div className=\"time_progressbarContainer\"\n                                                    onClick={() => handleProgressVideo(progress)}\n                                                >\n                                                    <div\n                                                        style={{ width: `${progress}%` }}\n                                                        className=\"time_progressBar\"\n\n                                                    ></div>\n                                                </div>\n                                                <p className=\"controlsTime\">\n                                                    {Math.floor(videoTime / (60 * 60)) + \":\" + (\"0\" + Math.floor(videoTime / 60)).slice(-2) + \":\" + (\"0\" + Math.floor(videoTime % 60)).slice(-2)}\n                                                </p>\n                                            </div>\n                                            {volume > 0 ? (\n                                                <div className=\"volume-progress\">\n\n                                                    <input\n                                                        id=\"player_slider\"\n                                                        type=\"range\"\n                                                        name=\"volume\"\n                                                        className=\"player__slider\"\n                                                        min=\"0\" max=\"1\" step=\"0.05\"\n                                                        value={volume}\n                                                        onChange={(e) => handleRangeUpdate(e)}\n                                                    />\n                                                    <br />\n                                                    <VolumeUpIcon\n                                                        onClick={handleVolumeDown}\n                                                        className=\"volumeIcons\"\n                                                    />\n                                                    {/* <input\n                                                        type=\"range\"\n                                                        name=\"playbackRate\"\n                                                        className=\"player__slider\"\n                                                        min=\"0.5\" max=\"2\" step=\"0.1\"\n                                                        value={playbackRate}\n                                                        onChange={(e) => handleRangeUpdate(e)}\n                                                    /> */}\n                                                </div>\n                                            ) : (\n                                                <div className=\"volume-progress\">\n\n                                                    <input\n                                                        id=\"player_slider\"\n                                                        type=\"range\"\n                                                        name=\"volume\"\n                                                        className=\"player__slider\"\n                                                        min=\"0\" max=\"1\" step=\"0.05\"\n                                                        value={volume}\n                                                        onChange={(e) => handleRangeUpdate(e)}\n                                                    />\n                                                    <br />\n                                                    <VolumeOffIcon\n                                                        onClick={handleVolumeUp}\n                                                        className=\"volumeIcons\"\n                                                    />\n\n                                                </div>\n                                            )}\n                                        </div>\n                                    ) : (\n                                        quality480flag ?\n                                            (\n                                                <div className=\"video-container1\">\n                                                    {loginTo ?\n                                                        <div className=\"controls\">\n                                                            <img\n                                                                onClick={revert}\n                                                                className=\"controlsIcon\"\n                                                                alt=\"\"\n                                                                src=\"/images/player/backward.png\"\n                                                            />\n                                                            {playing ? (\n                                                                <img\n                                                                    onClick={() => videoHandler(\"pause\")}\n                                                                    className=\"controlsIconsmall\"\n                                                                    alt=\"\"\n                                                                    src=\"/images/player/pause.png\"\n                                                                />\n                                                            ) : (\n                                                                <img\n                                                                    onClick={() => videoHandler(\"play\")}\n                                                                    className=\"controlsIconsmall\"\n                                                                    alt=\"\"\n                                                                    src=\"/images/player/play.png\"\n                                                                />\n                                                            )}\n                                                            <img\n                                                                onClick={fastForward}\n                                                                className=\"controlsIcon\"\n                                                                alt=\"\"\n                                                                src=\"/images/player/forward.png\"\n                                                            />\n                                                        </div>\n                                                        : \"\"}\n                                                    <video\n                                                        ref={vidRef}\n                                                        poster={item?.MoviePoster}\n                                                        width=\"100%\"\n                                                        className=\"vedio-palyer video\"\n                                                        id=\"video1\"\n                                                    ></video>\n                                                    <source\n                                                        src={item?.Quality480}\n                                                        type=\"video/mp4\"\n                                                    ></source>\n                                                    {!loginTo ?\n                                                        <>\n                                                            <span className='loginWatch'>\n                                                                Login to Watch the Movie\n                                                            </span>\n                                                        </>\n                                                        : \"\"}\n                                                    <Button\n                                                        onClick={() => handle480Quality()}\n                                                        className=\"quality\"\n                                                    >\n                                                        {'SUB'}\n                                                    </Button>\n                                                    {/* <div className=\"controlsContainer\">\n                                                        \n                                                    </div> */}\n                                                    <div className=\"timecontrols\">\n                                                        <p className=\"controlsTime\">\n                                                            {Math.floor(currentTime / (60 * 60)) + \":\" + (\"0\" + Math.floor((currentTime / 60) % 60)).slice(-2) + \":\" + (\"0\" + Math.floor(currentTime % 60)).slice(-2)}\n                                                        </p>\n                                                        <div className=\"time_progressbarContainer\"\n                                                            onClick={() => handleProgressVideo(progress)}\n                                                        >\n                                                            <div\n                                                                style={{ width: `${progress}%` }}\n                                                                className=\"time_progressBar\"\n\n                                                            ></div>\n                                                        </div>\n                                                        <p className=\"controlsTime\">\n                                                            {Math.floor(videoTime / (60 * 60)) + \":\" + (\"0\" + Math.floor(videoTime / 60)).slice(-2) + \":\" + (\"0\" + Math.floor(videoTime % 60)).slice(-2)}\n                                                        </p>\n                                                    </div>\n                                                    {volume > 0 ? (\n                                                        <div className=\"volume-progress\">\n\n                                                            <input\n                                                                id=\"player_slider\"\n                                                                type=\"range\"\n                                                                name=\"volume\"\n                                                                className=\"player__slider\"\n                                                                min=\"0\" max=\"1\" step=\"0.05\"\n                                                                value={volume}\n                                                                onChange={(e) => handleRangeUpdate(e)}\n                                                            />\n                                                            <br />\n                                                            <VolumeUpIcon\n                                                                onClick={handleVolumeDown}\n                                                                className=\"volumeIcons\"\n                                                            />\n                                                            {/* <input\n                                                        type=\"range\"\n                                                        name=\"playbackRate\"\n                                                        className=\"player__slider\"\n                                                        min=\"0.5\" max=\"2\" step=\"0.1\"\n                                                        value={playbackRate}\n                                                        onChange={(e) => handleRangeUpdate(e)}\n                                                    /> */}\n                                                        </div>\n                                                    ) : (\n                                                        <div className=\"volume-progress\">\n\n                                                            <input\n                                                                id=\"player_slider\"\n                                                                type=\"range\"\n                                                                name=\"volume\"\n                                                                className=\"player__slider\"\n                                                                min=\"0\" max=\"1\" step=\"0.05\"\n                                                                value={volume}\n                                                                onChange={(e) => handleRangeUpdate(e)}\n                                                            />\n                                                            <br />\n                                                            <VolumeOffIcon\n                                                                onClick={handleVolumeUp}\n                                                                className=\"volumeIcons\"\n                                                            />\n\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            )\n                                            :\n                                            (\n                                                <div className=\"video-container1\">\n                                                    {loginTo ?\n                                                        <div className=\"controls\">\n                                                            <img\n                                                                onClick={revert}\n                                                                className=\"controlsIcon\"\n                                                                alt=\"\"\n                                                                src=\"/images/player/backward.png\"\n                                                            />\n                                                            {playing ? (\n                                                                <img\n                                                                    onClick={() => videoHandler(\"pause\")}\n                                                                    className=\"controlsIconsmall\"\n                                                                    alt=\"\"\n                                                                    src=\"/images/player/pause.png\"\n                                                                />\n                                                            ) : (\n                                                                <img\n                                                                    onClick={() => videoHandler(\"play\")}\n                                                                    className=\"controlsIconsmall\"\n                                                                    alt=\"\"\n                                                                    src=\"/images/player/play.png\"\n                                                                />\n                                                            )}\n                                                            <img\n                                                                onClick={fastForward}\n                                                                className=\"controlsIcon\"\n                                                                alt=\"\"\n                                                                src=\"/images/player/forward.png\"\n                                                            />\n                                                        </div>\n                                                        : \"\"}\n                                                    <video\n                                                        ref={vidRef}\n                                                        poster={item?.MoviePoster}\n                                                        width=\"100%\"\n                                                        className=\"vedio-palyer video\"\n                                                        id=\"video1\"\n                                                    >\n                                                        <source\n                                                            src={item?.Quality360}\n                                                            type=\"video/mp4\"\n                                                        ></source>\n                                                    </video>\n                                                    {!loginTo ?\n                                                        <>\n                                                            <span className='loginWatch'>\n                                                                Login to Watch the Movie\n                                                            </span>\n                                                        </>\n                                                        : \"\"}\n                                                        {item?.IsPremium == false?\n                                                        <>\n                                                        <span className='freeTag-details'><img src =\"/images/free-tag.png\" /></span>\n                                                        </>\n                                                        :\"\"}\n                                                    {loginTo ?\n                                                        <>\n                                                            <Button\n                                                                onClick={() => handleQuality()}\n                                                                className=\"quality\"\n                                                            >\n                                                                {'LOW'}\n                                                            </Button>\n                                                            <div className=\"timecontrols\">\n                                                                <p className=\"controlsTime\">\n                                                                    {Math.floor(currentTime / (60 * 60)) + \":\" + (\"0\" + Math.floor((currentTime / 60) % 60)).slice(-2) + \":\" + (\"0\" + Math.floor(currentTime % 60)).slice(-2)}\n                                                                </p>\n                                                                <div className=\"time_progressbarContainer\"\n                                                                    // onClick={() => handleProgressVideo(progress)}\n                                                                    onMouseDown={startMouseDown}\n                                                                    onMouseUp={endMouseDown}\n                                                                    onMouseLeave={endMouseDown}\n                                                                    onMouseMove={(e) => isMouseDown && scrub(e)}\n                                                                    onClick={scrub}\n                                                                >\n                                                                    <div\n                                                                        style={{ width: `${progress}%` }}\n                                                                        className=\"time_progressBar\"\n\n                                                                    ></div>\n                                                                </div>\n                                                                <p className=\"controlsTime\">\n                                                                    {Math.floor(videoTime / (60 * 60)) + \":\" + (\"0\" + Math.floor(videoTime / 60)).slice(-2) + \":\" + (\"0\" + Math.floor(videoTime % 60)).slice(-2)}\n                                                                </p>\n                                                            </div>\n                                                            {volume > 0 ? (\n                                                                <div className=\"volume-progress\">\n\n                                                                    <input\n                                                                        id=\"player_slider\"\n                                                                        type=\"range\"\n                                                                        name=\"volume\"\n                                                                        className=\"player__slider\"\n                                                                        min=\"0\" max=\"1\" step=\"0.05\"\n                                                                        value={volume}\n                                                                        onChange={(e) => handleRangeUpdate(e)}\n                                                                    />\n                                                                    <br />\n                                                                    <VolumeUpIcon\n                                                                        onClick={handleVolumeDown}\n                                                                        className=\"volumeIcons\"\n                                                                    />\n                                                                    {/* <input\n                                                        type=\"range\"\n                                                        name=\"playbackRate\"\n                                                        className=\"player__slider\"\n                                                        min=\"0.5\" max=\"2\" step=\"0.1\"\n                                                        value={playbackRate}\n                                                        onChange={(e) => handleRangeUpdate(e)}\n                                                    /> */}\n                                                                </div>\n                                                            ) : (\n                                                                <div className=\"volume-progress\">\n\n                                                                    <input\n                                                                        id=\"player_slider\"\n                                                                        type=\"range\"\n                                                                        name=\"volume\"\n                                                                        className=\"player__slider\"\n                                                                        min=\"0\" max=\"1\" step=\"0.05\"\n                                                                        value={volume}\n                                                                        onChange={(e) => handleRangeUpdate(e)}\n                                                                    />\n                                                                    <br />\n                                                                    <VolumeOffIcon\n                                                                        onClick={handleVolumeUp}\n                                                                        className=\"volumeIcons\"\n                                                                    />\n\n                                                                </div>\n                                                            )}\n                                                        </>\n                                                        : \"\"}\n                                                </div>\n                                            )\n                                    )\n                                )\n                                }\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Grid className=\"description\" container spacing={3} >\n                        <Grid className=\"tile-main\" item md={12} xs={12}>\n                            <Grid className=\"icon\" item md={3} xs={3} onClick={() => handleStartOver()} style={{ cursor: 'pointer' }}>\n                                <ReplayIcon className=\"icon-replay\" />\n                                <h5 className=\"start-over\" >Start Over</h5>\n                            </Grid>\n\n                            <Grid className=\"name icon\" item md={6} xs={6}>\n                                <h3>{item?.MovieName}</h3>\n                                <p>{item?.Language}</p>\n                                <p><span>{item?.Genre} | </span><span>{item?.IMDbRating} | </span> <span>{item?.Certificate} | </span><span>{item?.Duration.split(':')[0].substr(1, 1)+'h '+item?.Duration.split(':')[1]+'min'} | </span><span>{item?.ReleasedYear.split(' ')[0].split('/')[2]}</span></p>\n                                <Button className='button-bg' onClick={() => handleWatchTrailer(item?.Id)}>Watch Trailer</Button>\n                                <Button className='button-bg' onClick={() => handleWatchMovie()}>Watch Movie</Button>\n                            </Grid>\n                            <Grid className=\"last-grid\" item md={3} xs={3}>\n                                <img src=\"/images/My collection.png\" className=\"collection\" onClick={() => handleAddCollection(item?.Id)} />\n                                <h5 className='addtocollection' >{collectionAdded ? \"Remove from Collection\" : \"Add to collection\"}</h5>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid className=\"description padd\" container>\n                        <Grid className=\"description-main\" item md={12} xs={12}>\n                            <Grid className=\"description-text\" item md={12} xs={12}>\n                                <h5>Description</h5>\n                                <p className=\"description-para\">\n                                    {item?.Description}\n                                </p>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid className=\"crew padd\" container >\n                        <Grid className=\"crew-main\" item md={12} xs={12}>\n                            <Grid className=\"crew-text\" item md={12} xs={12}>\n                                <h5>Cast & Crew</h5>\n                            </Grid>\n                        </Grid>\n                        <Grid className=\"crew-images\" item md={12} xs={12}>\n\n                            {item?.cast?.map((cas, index) =>\n                                <Grid className=\"crew-images1\" item md={1} xs={4}>\n                                    <img src={cas?.ImageURL} alt=\"castAndCrew\" />\n                                    <p className='role'>{cas?.Role}</p>\n                                    <p className='charactor'>{cas?.Charactor}</p>\n                                </Grid>\n                            )}\n                        </Grid>\n                    </Grid>\n\n                </>\n            )}\n            <Grid className=\"realted padd\" container>\n                <Grid className=\"related-main\" item md={12} xs={12}>\n                    <div className=\"iq-main-header d-flex align-items-center justify-content-between\">\n                        <h4 className='main-title'>Related Movies</h4>\n                        <a className=\"iq-view-all\" onClick={() => handleViewAll(categoryA)}>View All</a>\n                    </div>\n                    <Slider {...settings}>\n                        {categoryList.map((category, index) => (\n                            <div className='highlyRatedslider'\n                            //  onClick={() => handleHighlyRated(language)}\n                            >\n                                <img className='highlyRatedMovies' src={category?.MoviePoster} />\n                            </div>\n                        )\n                        )\n                        }\n                    </Slider>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}